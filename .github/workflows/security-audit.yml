name: Security Audit

permissions:
  contents: read
  security-events: write
  actions: read

on:
  push:
    branches: [ main, develop ]
    paths:
      - '*.tf'
      - '*.tfvars'
      - 'modules/**/*.tf'
      - 'examples/**/*.tf'
      - '.github/workflows/security-audit.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '*.tf'
      - '*.tfvars'
      - 'modules/**/*.tf'
      - 'examples/**/*.tf'
      - '.github/workflows/security-audit.yml'
  schedule:
    # Run security audit weekly on Monday at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  checkov:
    name: Checkov Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          soft_fail: true
          output_format: sarif
          output_file_path: checkov.sarif
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Checkov results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov.sarif

  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy.sarif

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install detect-secrets
        run: pip install detect-secrets

      - name: Run detect-secrets scan
        run: |
          detect-secrets scan --all-files --force-use-all-plugins \
            --exclude-files '\.git/.*' \
            --exclude-files '\.terraform/.*' > .secrets.new
          
      - name: Check for new secrets
        run: |
          if [ -f ".secrets.baseline" ]; then
            detect-secrets audit --diff .secrets.new .secrets.baseline || \
            echo "⚠️ New potential secrets detected. Review the scan results."
          else
            echo "ℹ️ No baseline found. Creating new baseline."
          fi

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Check for outdated providers
        run: |
          terraform init -backend=false
          terraform version
          terraform providers

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [checkov, trivy, secret-scan, dependency-check]
    if: always()
    
    steps:
      - name: Security scan summary
        run: |
          echo "## Security Audit Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Checkov scan completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Trivy scan completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Secret scan completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Dependency check completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Review the Security tab for detailed findings." >> $GITHUB_STEP_SUMMARY

